#!/usr/bin/env sh
#
# Don't touch anything from here
# this is default
#
#
SRC_DIR="`pwd`"
cd "`dirname "$0"`"
cd "system/libraries/phpunit/phpunit/composer/bin"
BIN_TARGET="`pwd`/phpunit"
cd "$SRC_DIR"
"$BIN_TARGET" "$@"
#
# Starting point of customization
# to generate test result from a junit log file
#
# define the expected paths
COVERAGE="`dirname "$0"`"/../WebContent/coverage
COVERAGE_LOGS="$COVERAGE"/logs
#
#
# add stylesheet to the xml result
#
sed -i 's/<?xml version="1.0" encoding="UTF-8"?>/<?xml version="1.0" encoding="UTF-8"?>\n<?xml-stylesheet type="text\/xsl" href="logfile.xslt"?>/g' "$COVERAGE"/logfile.xml
#
# Get the latest revision hash
# add the hash to the xml result to be able
# to determine which version of the project
# the test was run
#
REVISION="`git rev-parse --verify HEAD`"
NOW=$(date +"%Y-%m-%d %T")
sed -i 's/<testsuites>/<testsuites>\n<revision name="'"$REVISION"'" date="'"$NOW"'"\/>/g' "$COVERAGE"/logfile.xml
#
# Because by default, it does not support rotating/history of log files
# we are copying a version of the generated file
# and create a list of versions so we can have an
# option to revisit the logs at anytime
#
LOG_FILE="log-"$REVISION"-"$(echo $NOW | tr -d ' ' | tr -d ':' | tr -d '-')".xml"
LOG_FILE_NAME="log-$REVISION"
cp "$COVERAGE"/logfile.xml "$COVERAGE_LOGS"/$LOG_FILE
#
# verify if index.html exists, otherwise
# create it by copying from the template.html
if [ ! -f "$COVERAGE_LOGS"/index.html ]; then
    cp "$COVERAGE_LOGS"/template.html "$COVERAGE_LOGS"/index.html
fi
#
#
# add the file to the HTML list#
#
sed -i 's/<div style="display: none;"><\/div>/<div style="display: none;"><\/div>\n<li><a href="'"$LOG_FILE"'">'"$LOG_FILE_NAME"'<\/a><span class="date">'"$NOW"'<\/a><\/li>/g' "$COVERAGE_LOGS"/index.html
#
# remove the original log file so there is only
# 1 place to review history
#
rm "$COVERAGE"/logfile.xml
